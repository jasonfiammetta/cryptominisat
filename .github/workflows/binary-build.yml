name: build

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, macos-14, ubuntu-24.04-arm]
        build_type: [Release]
        staticcompile: [ON, OFF]
        c_compiler: [gcc]
        cpp_compiler: [g++]

    steps:
    - name: Install dependencies for Linux
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-24.04-arm'
      run: sudo apt-get update && sudo apt-get install -yq help2man libgmp-dev

    - name: Install gmp for Mac
      if: matrix.os == 'macos-13'
      run: |
        wget https://ftp.gnu.org/gnu/gmp/gmp-6.3.0.tar.xz
        tar xf gmp-6.3.0.tar.xz
        cd gmp-6.3.0
        ./configure --enable-static -enable-cxx --enable-shared
        make -j8
        sudo make install
        cd ..

    - name: Install zlib for Mac dynamic
      if: matrix.os == 'macos-14' && matrix.staticcompile == 'OFF'
      run: |
        wget https://www.zlib.net/zlib-1.3.1.tar.gz
        tar xzvf zlib-1.3.1.tar.gz
        cd zlib-1.3.1
        ./configure
        make -j8
        sudo make install
        cd ..

    - name: Install zlib for Mac static
      if: matrix.os == 'macos-14' && matrix.staticcompile == 'ON'
      run: |
        wget https://www.zlib.net/zlib-1.3.1.tar.gz
        tar xzvf zlib-1.3.1.tar.gz
        cd zlib-1.3.1
        ./configure --static
        make -j8
        sudo make install
        cd ..

    - name: Installing Numpy
      run: |
        pip install pip --upgrade
        pip install numpy lit

    - name: Checkout Cadical
      uses: actions/checkout@v2
      with:
        repository: meelgroup/cadical
        ref: mate-only-libraries-1.8.0
        path: cadical

    - name: Build Cadical
      run: |
       cd cadical
       CXXFLAGS=-fPIC ./configure --competition
       make -j8
       cd ..

    - name: Checkout Cadiback
      uses: actions/checkout@v2
      with:
        repository: meelgroup/cadiback
        ref: synthesis
        path: cadiback

    - name: Build Cadiback
      run: |
       cd cadiback
       CXX=c++ ./configure
       make -j8
       cd ..

    - name: checkout
      uses: actions/checkout@v4
      with:
        path: project
        submodules: 'true'

    - name: Configure & build
      run: |
        cd project
        mkdir -p build && cd build
        cmake \
        -DENABLE_TESTING=OFF \
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -DSTATICCOMPILE=${{ matrix.staticcompile }} \
        -S ..
        cmake --build . --config ${{matrix.build_type}} -v

    - name: Upload Artifact - Linux
      if: matrix.os == 'ubuntu-latest' && matrix.staticcompile == 'ON'
      uses: actions/upload-artifact@v4
      with:
        name: cryptominisat5-linux-amd64
        path: project/build/cryptominisat5

    - name: Upload Artifact - Linux arm
      if: matrix.os == 'ubuntu-24.04-arm' && matrix.staticcompile == 'ON'
      uses: actions/upload-artifact@v4
      with:
        name: cryptominisat-linux-arm64
        path: project/build/cryptominisat5

    - name: Upload Artifact - Mac
      if: matrix.os == 'macos-14' && matrix.staticcompile == 'ON'
      uses: actions/upload-artifact@v4
      with:
        name: cryptominisat5-mac-arm64
        path: project/build/cryptominisat5

    - name: Upload Artifact - Windows
      if: matrix.os == 'windows-2022' && matrix.staticcompile == 'ON'
      uses: actions/upload-artifact@v4
      with:
        name: cryptominisat5-win64.exe
        path: project\build\Release\cryptominisat5.exe
